{"ast":null,"code":"var _jsxFileName = \"/home/barath/Documents/apexchart/client/src/components/logs.jsx\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport { TextField, Button } from '@material-ui/core';\nimport { ToggleButton, ToggleButtonGroup } from '@material-ui/lab';\nimport Chart from 'react-apexcharts';\nimport moment from 'moment';\nexport default class logs extends Component {\n  constructor(props) {\n    super(props);\n\n    this.componentDidMount = () => {\n      axios.get(`http://localhost:5000/logs?limit=${this.state.limit}`).then(response => {\n        this.setState({\n          data: response.data.data\n        });\n      });\n      axios.get(`http://localhost:5000/statuscount`).then(response => {\n        console.log(response.data.data);\n        response.data.data.code_count.buckets.map(data => {\n          this.state.option1.labels.push(data.key);\n          this.state.series1.push(data.doc_count);\n        });\n        response.data.data.agent_count.buckets.map(data => {\n          this.state.option2.labels.push(data.key);\n          this.state.series2.push(data.doc_count);\n        });\n      });\n      axios.get(`http://localhost:5000/datehits?type=${this.state.type}`).then(response => {\n        let x;\n        console.log(response.data);\n        let value = [];\n        response.data.data.map(data => {\n          x = moment(data.key_as_string).format(\"HH:mma\");\n          this.setState({\n            option3: {\n              label: [response.data.start, response.data.start]\n            }\n          });\n          value.push({\n            x,\n            y: data.doc_count\n          });\n        });\n        this.setState({\n          series3: [{\n            data: value\n          }]\n        });\n      }).catch(err => {\n        alert(\"something went wrong\");\n      });\n    };\n\n    this.redirect = () => {\n      this.props.history.push(\"../\");\n    };\n\n    this.setlimit = () => {\n      axios.get(`http://localhost:5000/logs?limit=${this.state.limit}`).then(response => {\n        this.setState({\n          data: response.data.data\n        });\n      });\n    };\n\n    this.limit = e => {\n      this.setState({\n        limit: e.target.value\n      });\n    };\n\n    this.handletype = async (e, type) => {\n      if (type != null) {\n        await this.setState({\n          type\n        });\n        await axios.get(`http://localhost:5000/datehits?type=${this.state.type}`).then(response => {\n          console.log(response.data);\n          let value = [];\n          let x;\n          response.data.data.map(data => {\n            if (this.state.type === \"day\") {\n              x = moment(data.key_as_string).format(\"HHa mm[mins]\");\n            } else {\n              x = moment(data.key_as_string).format(\"DD MMM\");\n            }\n\n            value.push({\n              x,\n              y: data.doc_count\n            });\n          });\n          this.setState({\n            series3: [{\n              data: value\n            }]\n          });\n        }).catch(err => {\n          alert(\"something went wrong\");\n        });\n      }\n    };\n\n    this.state = {\n      data: [],\n      limit: 20,\n      option1: {\n        title: {\n          text: \"Status Chart\",\n          align: \"centre\"\n        },\n        labels: []\n      },\n      series1: [],\n      option2: {\n        title: {\n          text: \"Agent Chart  \",\n          align: \"centre\"\n        },\n        labels: []\n      },\n      series2: [],\n      type: \"day\",\n      option3: {\n        title: {\n          text: \"Hits chart\",\n          align: \"centre\"\n        },\n        xaxis: {\n          type: \"date\",\n          label\n        }\n      },\n      series3: [{\n        data: []\n      }]\n    };\n  }\n\n  render() {\n    console.log(this.state.series3);\n    return React.createElement(\"div\", {\n      className: \"logs\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, \"LIMIT :\"), React.createElement(TextField, {\n      type: \"Number\",\n      onChange: e => this.limit(e),\n      value: this.state.limit,\n      inputProps: {\n        min: \"10\",\n        max: \"100\",\n        step: \"10\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }), React.createElement(Button, {\n      variant: \"contained\",\n      onClick: () => this.setlimit(),\n      color: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, \"SET\"), React.createElement(\"button\", {\n      id: \"searchpage\",\n      onClick: () => this.redirect(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, \"Main Page\"), React.createElement(\"div\", {\n      id: \"logtable\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, React.createElement(\"table\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      id: \"colorhead\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, \"CLEINT\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, \"METHOD\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, \"STATUS\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, \"AGENT\")), this.state.data.map(data => {\n      return React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }, data._source.client), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }, data._source.method), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      }, data._source.code), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }, data._source.agent));\n    }))), React.createElement(\"div\", {\n      id: \"piecharts\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, React.createElement(Chart, {\n      className: \"pie\",\n      options: this.state.option1,\n      series: this.state.series1,\n      type: \"pie\",\n      height: 370,\n      width: 350,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }), React.createElement(Chart, {\n      className: \"pie2\",\n      options: this.state.option2,\n      series: this.state.series2,\n      type: \"pie\",\n      height: 370,\n      width: 350,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    })), React.createElement(ToggleButtonGroup, {\n      exclusive: true,\n      onChange: this.handletype,\n      value: this.state.type,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }, React.createElement(ToggleButton, {\n      value: \"day\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }, \"Day\"), React.createElement(ToggleButton, {\n      value: \"month\",\n      color: this.state.month,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }, \"Month\")), React.createElement(Chart, {\n      className: \"linechart\",\n      options: this.state.option3,\n      series: this.state.series3,\n      type: \"line\",\n      height: 350,\n      width: 1000,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }));\n  }\n\n}","map":{"version":3,"sources":["/home/barath/Documents/apexchart/client/src/components/logs.jsx"],"names":["React","Component","axios","TextField","Button","ToggleButton","ToggleButtonGroup","Chart","moment","logs","constructor","props","componentDidMount","get","state","limit","then","response","setState","data","console","log","code_count","buckets","map","option1","labels","push","key","series1","doc_count","agent_count","option2","series2","type","x","value","key_as_string","format","option3","label","start","y","series3","catch","err","alert","redirect","history","setlimit","e","target","handletype","title","text","align","xaxis","render","min","max","step","_source","client","method","code","agent","month"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport axios from 'axios';\nimport {TextField,Button} from '@material-ui/core'\nimport {ToggleButton,ToggleButtonGroup} from '@material-ui/lab'\nimport Chart from 'react-apexcharts'\nimport moment from 'moment'\n\nexport default class logs extends Component {\n\n    constructor(props){\n        super(props);\n        this.state = {\n            data : [],\n            limit: 20,\n            option1:{\n                title:{\n                    text: \"Status Chart\",\n                    align : \"centre\"\n                },\n                labels: [],\n            },\n            series1:[],\n            option2:{\n                title:{\n                    text: \"Agent Chart  \",\n                    align : \"centre\"\n                },\n                labels: [],\n            },\n            series2:[],\n            type:\"day\",\n            option3: {\n                title: {\n                    text: \"Hits chart\",\n                    align : \"centre\"\n                },\n                xaxis: {\n                    type: \"date\",\n                    label\n                },\n            },\n            series3:[{\n                data: []\n            }]\n        }\n    }\n\n    componentDidMount = () => {\n        axios.get(`http://localhost:5000/logs?limit=${this.state.limit}`)\n        .then((response)=>{\n            this.setState({data : response.data.data})\n        })\n        axios.get(`http://localhost:5000/statuscount`)\n        .then((response)=>{\n            console.log(response.data.data)\n            response.data.data.code_count.buckets.map((data)=>{\n                this.state.option1.labels.push(data.key)\n                this.state.series1.push(data.doc_count)\n            })\n            response.data.data.agent_count.buckets.map((data)=>{\n                this.state.option2.labels.push(data.key)\n                this.state.series2.push(data.doc_count)\n            })\n        })\n        axios.get(`http://localhost:5000/datehits?type=${this.state.type}`)\n        .then((response)=>{\n            let x;\n            console.log(response.data);\n            let value=[]\n            response.data.data.map((data)=>{\n                x= moment(data.key_as_string).format(\"HH:mma\")\n                this.setState({option3 : {label : [response.data.start,response.data.start]}})\n                value.push({x,y : data.doc_count})\n            })\n            this.setState({series3 : [{data: value}]})\n        }).catch((err)=>{\n            alert(\"something went wrong\")\n        })\n    }\n\n    redirect = () =>{\n        this.props.history.push(\"../\")\n    }\n\n    setlimit = () =>{\n        axios.get(`http://localhost:5000/logs?limit=${this.state.limit}`)\n        .then((response)=>{\n            this.setState({data : response.data.data})\n        })\n    }\n\n    limit = (e) => { \n            this.setState({limit:e.target.value})\n    }\n\n    handletype = async(e,type) =>{\n        if(type!=null){\n            await this.setState({type})\n            await axios.get(`http://localhost:5000/datehits?type=${this.state.type}`)\n            .then((response)=>{\n                console.log(response.data);\n                let value=[]\n                let x;\n                response.data.data.map((data)=>{\n                    if(this.state.type===\"day\"){\n                        x= moment(data.key_as_string).format(\"HHa mm[mins]\")\n                    } else {\n                        x= moment(data.key_as_string).format(\"DD MMM\")\n                    }\n                    value.push({x,y : data.doc_count})\n                })\n                this.setState({series3 : [{data: value}]})\n            }).catch((err)=>{\n                alert(\"something went wrong\");\n            })\n        }\n    }\n\n    render() {\n        console.log(this.state.series3)\n        return (\n            <div className=\"logs\">\n                <label>LIMIT :</label><TextField type=\"Number\" onChange={(e)=>this.limit(e)} value={this.state.limit} inputProps={{ min:\"10\",max:\"100\" ,step:\"10\"}}/>\n                <Button variant=\"contained\" onClick={()=>this.setlimit()} color=\"primary\">SET</Button>\n                <button id=\"searchpage\" onClick={()=>this.redirect()}>Main Page</button>\n                <div id=\"logtable\">\n                    <table>\n                        <tr id=\"colorhead\">\n                            <th>CLEINT</th>\n                            <th>METHOD</th>\n                            <th>STATUS</th>\n                            <th>AGENT</th>\n                        </tr>\n                        {this.state.data.map((data)=>{\n                            return(\n                            <tr>\n                                <td>{data._source.client}</td>\n                                <td>{data._source.method}</td>\n                                <td>{data._source.code}</td>\n                                <td>{data._source.agent}</td>\n                            </tr>)\n                        })}\n                    </table>\n                </div>\n                <div id=\"piecharts\">\n                <Chart className=\"pie\" options={this.state.option1} series={this.state.series1} type=\"pie\" height={370} width={350}/>\n                <Chart className=\"pie2\" options={this.state.option2} series={this.state.series2} type=\"pie\" height={370} width={350}/>\n                </div>\n                <ToggleButtonGroup \n                    exclusive \n                    onChange={this.handletype} \n                    value={this.state.type} \n                    >\n                    <ToggleButton value=\"day\">Day</ToggleButton>\n                    <ToggleButton value=\"month\" color={this.state.month}>Month</ToggleButton>\n                    {/* <ToggleButton value=\"year\" color={this.state.year}>Year</ToggleButton> */}\n                </ToggleButtonGroup>\n                <Chart className=\"linechart\" options={this.state.option3} series={this.state.series3} type=\"line\" height={350} width={1000}/>\n            </div>\n        )\n    }\n}\n"]},"metadata":{},"sourceType":"module"}