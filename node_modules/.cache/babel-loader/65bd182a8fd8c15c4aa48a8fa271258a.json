{"ast":null,"code":"var _jsxFileName = \"/home/barath/Documents/apexchart/src/components/body.jsx\";\nimport React, { Component } from 'react';\nimport Chart from 'react-apexcharts';\nimport axios from 'axios';\nexport default class body extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      dummy: [],\n      series: [{\n        data: []\n      }],\n      options: {\n        chart: {\n          type: 'candlestick',\n          height: 700\n        },\n        title: {\n          text: 'CandleStick Chart',\n          align: 'left'\n        },\n        xaxis: {\n          type: 'datetime'\n        },\n        yaxis: {\n          tooltip: {\n            enabled: true\n          }\n        }\n      },\n      lineseries: [{\n        data: []\n      }],\n      lineoption: {\n        tooltip: {\n          enabled: true,\n          y: {\n            title: {\n              formatter: Price => Price\n            }\n          }\n        },\n        title: {\n          text: 'Line Chart',\n          align: 'left'\n        },\n        xaxis: {\n          type: 'datetime'\n        },\n        stroke: {\n          width: 3,\n          curve: 'smooth'\n        }\n      }\n    };\n  }\n\n  componentDidMount() {\n    console.log(this.state);\n    axios.get(\"https://www.moneycontrol.com/mc/widget/basicchart/get_chart_value?classic=true&sc_did=IOC&dur=1yr\").then(result => {\n      // console.log(new Date(result.data.g1[0].date))\n      var series = [];\n      var lineseries = []; // this.setState({lineoption:{xaxis:{min:result.data.g1[0].date}}})\n\n      result.data.g1.map(result => {\n        console.log(result);\n        series.push([result.date, [result.open, result.high, result.low, result.close]]);\n        lineseries.push([result.date, result.value]);\n        this.setState({\n          series: [{\n            data: series\n          }],\n          lineseries: [{\n            data: lineseries\n          }]\n        }); // this.setState({lineseries:[{data:[...this.state.lineseries[0].data,[result.date,result.value]]}]})\n        // this.setState({series:[{data:[...this.state.series[0].data,[result.date,[result.open,result.high,result.low,result.close]]]}]})\n      });\n      console.log(this.state);\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(Chart, {\n      options: this.state.options,\n      series: this.state.series,\n      type: \"candlestick\",\n      width: 1000,\n      height: 320,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }), React.createElement(Chart, {\n      options: this.state.lineoption,\n      series: this.state.lineseries,\n      type: \"line\",\n      width: 1000,\n      height: 320,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }));\n  }\n\n}","map":{"version":3,"sources":["/home/barath/Documents/apexchart/src/components/body.jsx"],"names":["React","Component","Chart","axios","body","constructor","props","state","dummy","series","data","options","chart","type","height","title","text","align","xaxis","yaxis","tooltip","enabled","lineseries","lineoption","y","formatter","Price","stroke","width","curve","componentDidMount","console","log","get","then","result","g1","map","push","date","open","high","low","close","value","setState","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport Chart from 'react-apexcharts'\nimport axios from 'axios'\n\nexport default class body extends Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            dummy:[],\n            series: [{ \n                data: []\n                }],\n            options: {\n                chart: {\n                  type: 'candlestick',\n                  height: 700\n                },\n                title: {\n                  text: 'CandleStick Chart',\n                  align: 'left'\n                },\n                xaxis: {\n                  type: 'datetime'\n                },\n                yaxis: {\n                  tooltip: {\n                    enabled: true\n                  }\n                }\n              },\n              lineseries:[{\n                data:[]\n              }],\n              lineoption:{\n                tooltip: {\n                  enabled: true,\n                  y:{\n                    title: {\n                      formatter: (Price) => Price\n                    }\n                  }\n                },\n                title: {\n                  text: 'Line Chart',\n                  align: 'left'\n                },\n                xaxis: {\n                  type: 'datetime'\n                },\n                stroke: {\n                  width:3,\n                  curve: 'smooth',\n                }\n              }\n            }\n        }\n\n    componentDidMount(){\n      console.log(this.state);\n        axios.get(\"https://www.moneycontrol.com/mc/widget/basicchart/get_chart_value?classic=true&sc_did=IOC&dur=1yr\")\n        .then((result)=>{\n            // console.log(new Date(result.data.g1[0].date))\n            var series=[];\n            var lineseries=[];\n            // this.setState({lineoption:{xaxis:{min:result.data.g1[0].date}}})\n            result.data.g1.map((result)=>{\n              console.log(result)\n              series.push([result.date,[result.open,result.high,result.low,result.close]]);\n              lineseries.push([result.date,result.value])\n              this.setState({series: [{data:series}],lineseries: [{data:lineseries}]});\n              // this.setState({lineseries:[{data:[...this.state.lineseries[0].data,[result.date,result.value]]}]})\n              // this.setState({series:[{data:[...this.state.series[0].data,[result.date,[result.open,result.high,result.low,result.close]]]}]})\n            })\n            console.log(this.state);\n        })\n    }\n\n    render() {\n        return (\n          <div>\n            <Chart options={this.state.options} series={this.state.series} type=\"candlestick\" width={1000} height={320} />\n            <Chart options={this.state.lineoption} series={this.state.lineseries} type=\"line\" width={1000} height={320} />\n          </div>\n        )\n    }\n}\n"]},"metadata":{},"sourceType":"module"}