{"ast":null,"code":"var _jsxFileName = \"/home/barath/Documents/apexchart/client/src/components/logs.jsx\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport { TextField, Button } from '@material-ui/core';\nimport { ToggleButton, ToggleButtonGroup } from '@material-ui/lab';\nimport Chart from 'react-apexcharts';\nexport default class logs extends Component {\n  constructor(props) {\n    super(props);\n\n    this.componentDidMount = () => {\n      axios.get(`http://localhost:5000/logs?limit=${this.state.limit}`).then(response => {\n        this.setState({\n          data: response.data.data\n        });\n      });\n      axios.get(`http://localhost:5000/statuscount`).then(response => {\n        console.log(response.data.data);\n        response.data.data.code_count.buckets.map(data => {\n          this.state.option1.labels.push(data.key);\n          this.state.series1.push(data.doc_count);\n        });\n        response.data.data.agent_count.buckets.map(data => {\n          this.state.option2.labels.push(data.key);\n          this.state.series2.push(data.doc_count);\n        });\n      });\n    };\n\n    this.redirect = () => {\n      this.props.history.push(\"../\");\n    };\n\n    this.setlimit = () => {\n      axios.get(`http://localhost:5000/logs?limit=${this.state.limit}`).then(response => {\n        this.setState({\n          data: response.data.data\n        });\n      });\n    };\n\n    this.limit = e => {\n      this.setState({\n        limit: e.target.value\n      });\n    };\n\n    this.handletype = (e, type) => {\n      console.log(type);\n    };\n\n    this.state = {\n      data: [],\n      limit: 20,\n      option1: {\n        title: {\n          text: \"Status Chart\",\n          align: \"centre\"\n        },\n        labels: []\n      },\n      series1: [],\n      option2: {\n        title: {\n          text: \"Agent Chart  \",\n          align: \"centre\"\n        },\n        labels: []\n      },\n      series2: [],\n      type: \"date\"\n    };\n  }\n\n  render() {\n    console.log(this.state.limit);\n    return React.createElement(\"div\", {\n      className: \"logs\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, \"LIMIT :\"), React.createElement(TextField, {\n      type: \"Number\",\n      onChange: e => this.limit(e),\n      value: this.state.limit,\n      inputProps: {\n        min: \"10\",\n        max: \"100\",\n        step: \"10\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }), React.createElement(Button, {\n      variant: \"contained\",\n      onClick: () => this.setlimit(),\n      color: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, \"SET\"), React.createElement(\"button\", {\n      id: \"searchpage\",\n      onClick: () => this.redirect(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, \"Main Page\"), React.createElement(\"div\", {\n      id: \"logtable\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(\"table\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      id: \"colorhead\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, \"CLEINT\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, \"METHOD\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, \"STATUS\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, \"AGENT\")), this.state.data.map(data => {\n      return React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, data._source.client), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, data._source.method), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, data._source.code), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, data._source.agent));\n    }))), React.createElement(\"div\", {\n      id: \"piecharts\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, React.createElement(Chart, {\n      className: \"pie\",\n      options: this.state.option1,\n      series: this.state.series1,\n      type: \"pie\",\n      height: 350,\n      width: 350,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }), React.createElement(Chart, {\n      className: \"pie2\",\n      options: this.state.option2,\n      series: this.state.series2,\n      type: \"pie\",\n      height: 350,\n      width: 350,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    })), React.createElement(ToggleButtonGroup, {\n      exclusive: true,\n      onChange: this.handletype,\n      value: this.state.type,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, React.createElement(ToggleButton, {\n      value: \"date\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, \"Date\"), React.createElement(ToggleButton, {\n      value: \"month\",\n      color: this.state.month,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, \"Month\"), React.createElement(ToggleButton, {\n      value: \"year\",\n      color: this.state.year,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, \"Year\")), React.createElement(Chart, {\n      className: \"chart\",\n      options: this.state.option2,\n      series: this.state.series2,\n      type: \"pie\",\n      height: 350,\n      width: 1000,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }));\n  }\n\n}","map":{"version":3,"sources":["/home/barath/Documents/apexchart/client/src/components/logs.jsx"],"names":["React","Component","axios","TextField","Button","ToggleButton","ToggleButtonGroup","Chart","logs","constructor","props","componentDidMount","get","state","limit","then","response","setState","data","console","log","code_count","buckets","map","option1","labels","push","key","series1","doc_count","agent_count","option2","series2","redirect","history","setlimit","e","target","value","handletype","type","title","text","align","render","min","max","step","_source","client","method","code","agent","month","year"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAAQC,SAAR,EAAkBC,MAAlB,QAA+B,mBAA/B;AACA,SAAQC,YAAR,EAAqBC,iBAArB,QAA6C,kBAA7C;AACA,OAAOC,KAAP,MAAkB,kBAAlB;AAEA,eAAe,MAAMC,IAAN,SAAmBP,SAAnB,CAA6B;AAExCQ,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;;AADc,SAyBlBC,iBAzBkB,GAyBE,MAAM;AACtBT,MAAAA,KAAK,CAACU,GAAN,CAAW,oCAAmC,KAAKC,KAAL,CAAWC,KAAM,EAA/D,EACCC,IADD,CACOC,QAAD,IAAY;AACd,aAAKC,QAAL,CAAc;AAACC,UAAAA,IAAI,EAAGF,QAAQ,CAACE,IAAT,CAAcA;AAAtB,SAAd;AACH,OAHD;AAIAhB,MAAAA,KAAK,CAACU,GAAN,CAAW,mCAAX,EACCG,IADD,CACOC,QAAD,IAAY;AACdG,QAAAA,OAAO,CAACC,GAAR,CAAYJ,QAAQ,CAACE,IAAT,CAAcA,IAA1B;AACAF,QAAAA,QAAQ,CAACE,IAAT,CAAcA,IAAd,CAAmBG,UAAnB,CAA8BC,OAA9B,CAAsCC,GAAtC,CAA2CL,IAAD,IAAQ;AAC9C,eAAKL,KAAL,CAAWW,OAAX,CAAmBC,MAAnB,CAA0BC,IAA1B,CAA+BR,IAAI,CAACS,GAApC;AACA,eAAKd,KAAL,CAAWe,OAAX,CAAmBF,IAAnB,CAAwBR,IAAI,CAACW,SAA7B;AACH,SAHD;AAIAb,QAAAA,QAAQ,CAACE,IAAT,CAAcA,IAAd,CAAmBY,WAAnB,CAA+BR,OAA/B,CAAuCC,GAAvC,CAA4CL,IAAD,IAAQ;AAC/C,eAAKL,KAAL,CAAWkB,OAAX,CAAmBN,MAAnB,CAA0BC,IAA1B,CAA+BR,IAAI,CAACS,GAApC;AACA,eAAKd,KAAL,CAAWmB,OAAX,CAAmBN,IAAnB,CAAwBR,IAAI,CAACW,SAA7B;AACH,SAHD;AAKH,OAZD;AAaH,KA3CiB;;AAAA,SA6ClBI,QA7CkB,GA6CP,MAAK;AACZ,WAAKvB,KAAL,CAAWwB,OAAX,CAAmBR,IAAnB,CAAwB,KAAxB;AACH,KA/CiB;;AAAA,SAiDlBS,QAjDkB,GAiDP,MAAK;AACZjC,MAAAA,KAAK,CAACU,GAAN,CAAW,oCAAmC,KAAKC,KAAL,CAAWC,KAAM,EAA/D,EACCC,IADD,CACOC,QAAD,IAAY;AACd,aAAKC,QAAL,CAAc;AAACC,UAAAA,IAAI,EAAGF,QAAQ,CAACE,IAAT,CAAcA;AAAtB,SAAd;AACH,OAHD;AAIH,KAtDiB;;AAAA,SAwDlBJ,KAxDkB,GAwDTsB,CAAD,IAAO;AACP,WAAKnB,QAAL,CAAc;AAACH,QAAAA,KAAK,EAACsB,CAAC,CAACC,MAAF,CAASC;AAAhB,OAAd;AACP,KA1DiB;;AAAA,SA4DlBC,UA5DkB,GA4DL,CAACH,CAAD,EAAGI,IAAH,KAAW;AACpBrB,MAAAA,OAAO,CAACC,GAAR,CAAYoB,IAAZ;AACH,KA9DiB;;AAEd,SAAK3B,KAAL,GAAa;AACTK,MAAAA,IAAI,EAAG,EADE;AAETJ,MAAAA,KAAK,EAAE,EAFE;AAGTU,MAAAA,OAAO,EAAC;AACJiB,QAAAA,KAAK,EAAC;AACFC,UAAAA,IAAI,EAAE,cADJ;AAEFC,UAAAA,KAAK,EAAG;AAFN,SADF;AAKJlB,QAAAA,MAAM,EAAE;AALJ,OAHC;AAUTG,MAAAA,OAAO,EAAC,EAVC;AAWTG,MAAAA,OAAO,EAAC;AACJU,QAAAA,KAAK,EAAC;AACFC,UAAAA,IAAI,EAAE,eADJ;AAEFC,UAAAA,KAAK,EAAG;AAFN,SADF;AAKJlB,QAAAA,MAAM,EAAE;AALJ,OAXC;AAkBTO,MAAAA,OAAO,EAAC,EAlBC;AAmBTQ,MAAAA,IAAI,EAAC;AAnBI,KAAb;AAqBH;;AAyCDI,EAAAA,MAAM,GAAG;AACLzB,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKP,KAAL,CAAWC,KAAvB;AACA,WACI;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADJ,EAC0B,oBAAC,SAAD;AAAW,MAAA,IAAI,EAAC,QAAhB;AAAyB,MAAA,QAAQ,EAAGsB,CAAD,IAAK,KAAKtB,KAAL,CAAWsB,CAAX,CAAxC;AAAuD,MAAA,KAAK,EAAE,KAAKvB,KAAL,CAAWC,KAAzE;AAAgF,MAAA,UAAU,EAAE;AAAE+B,QAAAA,GAAG,EAAC,IAAN;AAAWC,QAAAA,GAAG,EAAC,KAAf;AAAsBC,QAAAA,IAAI,EAAC;AAA3B,OAA5F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAD1B,EAEI,oBAAC,MAAD;AAAQ,MAAA,OAAO,EAAC,WAAhB;AAA4B,MAAA,OAAO,EAAE,MAAI,KAAKZ,QAAL,EAAzC;AAA0D,MAAA,KAAK,EAAC,SAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAFJ,EAGI;AAAQ,MAAA,EAAE,EAAC,YAAX;AAAwB,MAAA,OAAO,EAAE,MAAI,KAAKF,QAAL,EAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAHJ,EAII;AAAK,MAAA,EAAE,EAAC,UAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAI,MAAA,EAAE,EAAC,WAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHJ,EAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAJJ,CADJ,EAOK,KAAKpB,KAAL,CAAWK,IAAX,CAAgBK,GAAhB,CAAqBL,IAAD,IAAQ;AACzB,aACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAKA,IAAI,CAAC8B,OAAL,CAAaC,MAAlB,CADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAK/B,IAAI,CAAC8B,OAAL,CAAaE,MAAlB,CAFJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAKhC,IAAI,CAAC8B,OAAL,CAAaG,IAAlB,CAHJ,EAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAKjC,IAAI,CAAC8B,OAAL,CAAaI,KAAlB,CAJJ,CADA;AAOH,KARA,CAPL,CADJ,CAJJ,EAuBI;AAAK,MAAA,EAAE,EAAC,WAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA,oBAAC,KAAD;AAAO,MAAA,SAAS,EAAC,KAAjB;AAAuB,MAAA,OAAO,EAAE,KAAKvC,KAAL,CAAWW,OAA3C;AAAoD,MAAA,MAAM,EAAE,KAAKX,KAAL,CAAWe,OAAvE;AAAgF,MAAA,IAAI,EAAC,KAArF;AAA2F,MAAA,MAAM,EAAE,GAAnG;AAAwG,MAAA,KAAK,EAAE,GAA/G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,EAEA,oBAAC,KAAD;AAAO,MAAA,SAAS,EAAC,MAAjB;AAAwB,MAAA,OAAO,EAAE,KAAKf,KAAL,CAAWkB,OAA5C;AAAqD,MAAA,MAAM,EAAE,KAAKlB,KAAL,CAAWmB,OAAxE;AAAiF,MAAA,IAAI,EAAC,KAAtF;AAA4F,MAAA,MAAM,EAAE,GAApG;AAAyG,MAAA,KAAK,EAAE,GAAhH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFA,CAvBJ,EA2BI,oBAAC,iBAAD;AAAmB,MAAA,SAAS,MAA5B;AAA6B,MAAA,QAAQ,EAAE,KAAKO,UAA5C;AAAwD,MAAA,KAAK,EAAE,KAAK1B,KAAL,CAAW2B,IAA1E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,YAAD;AAAc,MAAA,KAAK,EAAC,MAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,EAEI,oBAAC,YAAD;AAAc,MAAA,KAAK,EAAC,OAApB;AAA4B,MAAA,KAAK,EAAE,KAAK3B,KAAL,CAAWwC,KAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAFJ,EAGI,oBAAC,YAAD;AAAc,MAAA,KAAK,EAAC,MAApB;AAA2B,MAAA,KAAK,EAAE,KAAKxC,KAAL,CAAWyC,IAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHJ,CA3BJ,EAgCI,oBAAC,KAAD;AAAO,MAAA,SAAS,EAAC,OAAjB;AAAyB,MAAA,OAAO,EAAE,KAAKzC,KAAL,CAAWkB,OAA7C;AAAsD,MAAA,MAAM,EAAE,KAAKlB,KAAL,CAAWmB,OAAzE;AAAkF,MAAA,IAAI,EAAC,KAAvF;AAA6F,MAAA,MAAM,EAAE,GAArG;AAA0G,MAAA,KAAK,EAAE,IAAjH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAhCJ,CADJ;AAoCH;;AAxGuC","sourcesContent":["import React, { Component } from 'react'\nimport axios from 'axios';\nimport {TextField,Button} from '@material-ui/core'\nimport {ToggleButton,ToggleButtonGroup} from '@material-ui/lab'\nimport Chart from 'react-apexcharts'\n\nexport default class logs extends Component {\n\n    constructor(props){\n        super(props);\n        this.state = {\n            data : [],\n            limit: 20,\n            option1:{\n                title:{\n                    text: \"Status Chart\",\n                    align : \"centre\"\n                },\n                labels: [],\n            },\n            series1:[],\n            option2:{\n                title:{\n                    text: \"Agent Chart  \",\n                    align : \"centre\"\n                },\n                labels: [],\n            },\n            series2:[],\n            type:\"date\"\n        }\n    }\n\n    componentDidMount = () => {\n        axios.get(`http://localhost:5000/logs?limit=${this.state.limit}`)\n        .then((response)=>{\n            this.setState({data : response.data.data})\n        })\n        axios.get(`http://localhost:5000/statuscount`)\n        .then((response)=>{\n            console.log(response.data.data)\n            response.data.data.code_count.buckets.map((data)=>{\n                this.state.option1.labels.push(data.key)\n                this.state.series1.push(data.doc_count)\n            })\n            response.data.data.agent_count.buckets.map((data)=>{\n                this.state.option2.labels.push(data.key)\n                this.state.series2.push(data.doc_count)\n            })\n\n        })\n    }\n\n    redirect = () =>{\n        this.props.history.push(\"../\")\n    }\n\n    setlimit = () =>{\n        axios.get(`http://localhost:5000/logs?limit=${this.state.limit}`)\n        .then((response)=>{\n            this.setState({data : response.data.data})\n        })\n    }\n\n    limit = (e) => { \n            this.setState({limit:e.target.value})\n    }\n\n    handletype = (e,type) =>{\n        console.log(type);\n    }\n\n    render() {\n        console.log(this.state.limit)\n        return (\n            <div className=\"logs\">\n                <label>LIMIT :</label><TextField type=\"Number\" onChange={(e)=>this.limit(e)} value={this.state.limit} inputProps={{ min:\"10\",max:\"100\" ,step:\"10\"}}/>\n                <Button variant=\"contained\" onClick={()=>this.setlimit()} color=\"primary\">SET</Button>\n                <button id=\"searchpage\" onClick={()=>this.redirect()}>Main Page</button>\n                <div id=\"logtable\">\n                    <table>\n                        <tr id=\"colorhead\">\n                            <th>CLEINT</th>\n                            <th>METHOD</th>\n                            <th>STATUS</th>\n                            <th>AGENT</th>\n                        </tr>\n                        {this.state.data.map((data)=>{\n                            return(\n                            <tr>\n                                <td>{data._source.client}</td>\n                                <td>{data._source.method}</td>\n                                <td>{data._source.code}</td>\n                                <td>{data._source.agent}</td>\n                            </tr>)\n                        })}\n                    </table>\n                </div>\n                <div id=\"piecharts\">\n                <Chart className=\"pie\" options={this.state.option1} series={this.state.series1} type=\"pie\" height={350} width={350}/>\n                <Chart className=\"pie2\" options={this.state.option2} series={this.state.series2} type=\"pie\" height={350} width={350}/>\n                </div>\n                <ToggleButtonGroup exclusive onChange={this.handletype} value={this.state.type} >\n                    <ToggleButton value=\"date\">Date</ToggleButton>\n                    <ToggleButton value=\"month\" color={this.state.month}>Month</ToggleButton>\n                    <ToggleButton value=\"year\" color={this.state.year}>Year</ToggleButton>\n                </ToggleButtonGroup>\n                <Chart className=\"chart\" options={this.state.option2} series={this.state.series2} type=\"pie\" height={350} width={1000}/>\n            </div>\n        )\n    }\n}\n"]},"metadata":{},"sourceType":"module"}