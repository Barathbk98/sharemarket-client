{"ast":null,"code":"var _jsxFileName = \"/home/barath/Documents/apexchart/client/src/components/body.jsx\";\nimport React, { Component } from 'react'; // import Chart from 'react-apexcharts'\n\nimport axios from 'axios';\nimport swal from 'sweetalert';\nimport Loader from 'react-loader';\nexport default class body extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleval = e => {\n      this.setState({\n        search: e.target.value\n      });\n    };\n\n    this.fetchdata = () => {\n      this.setState({\n        loaded: false\n      });\n      axios.post(\"http://localhost:5000/fetch\", {\n        id: this.state.search\n      }).then(response => {\n        this.setState({\n          loaded: true,\n          data: response.data.data\n        });\n        swal(\"Successfully fetched\", {\n          icon: \"success\"\n        });\n      });\n    };\n\n    this.redirect = () => {\n      this.props.history.push(\"/searches\");\n    };\n\n    this.state = {\n      loaded: true,\n      search: \"\",\n      data: []\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"padding\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, \"Search id: \", React.createElement(\"input\", {\n      id: \"inputbox\",\n      onChange: e => this.handleval(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      onClick: () => this.fetchdata(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, \"Fetch data\"), React.createElement(\"button\", {\n      id: \"searchpage\",\n      onClick: () => this.redirect(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, \"Search Page\"), React.createElement(\"table\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, \"date\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, \"open\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, \"high\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, \"low\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, \"close\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, \"volume\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, \"value\")), React.createElement(Loader, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, this.state.data.map(data => {\n      return React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, data.date), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, data.open), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, data.high), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, data.low), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, data.close), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, data.volume), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, data.value));\n    }))));\n  }\n\n}","map":{"version":3,"sources":["/home/barath/Documents/apexchart/client/src/components/body.jsx"],"names":["React","Component","axios","swal","Loader","body","constructor","props","handleval","e","setState","search","target","value","fetchdata","loaded","post","id","state","then","response","data","icon","redirect","history","push","render","map","date","open","high","low","close","volume"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC,C,CACA;;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,YAAjB;AACA,OAAOC,MAAP,MAAmB,cAAnB;AAEA,eAAe,MAAMC,IAAN,SAAmBJ,SAAnB,CAA6B;AACxCK,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SASnBC,SATmB,GASNC,CAAD,IAAO;AACjB,WAAKC,QAAL,CAAc;AAACC,QAAAA,MAAM,EAACF,CAAC,CAACG,MAAF,CAASC;AAAjB,OAAd;AACD,KAXkB;;AAAA,SAanBC,SAbmB,GAaP,MAAK;AACf,WAAKJ,QAAL,CAAc;AAACK,QAAAA,MAAM,EAAG;AAAV,OAAd;AACAb,MAAAA,KAAK,CAACc,IAAN,CAAW,6BAAX,EAAyC;AAACC,QAAAA,EAAE,EAAG,KAAKC,KAAL,CAAWP;AAAjB,OAAzC,EACCQ,IADD,CACOC,QAAD,IAAY;AAChB,aAAKV,QAAL,CAAc;AAACK,UAAAA,MAAM,EAAG,IAAV;AAAiBM,UAAAA,IAAI,EAAED,QAAQ,CAACC,IAAT,CAAcA;AAArC,SAAd;AACAlB,QAAAA,IAAI,CAAC,sBAAD,EAAwB;AAC1BmB,UAAAA,IAAI,EAAE;AADoB,SAAxB,CAAJ;AAGD,OAND;AAOD,KAtBkB;;AAAA,SAwBnBC,QAxBmB,GAwBR,MAAK;AACd,WAAKhB,KAAL,CAAWiB,OAAX,CAAmBC,IAAnB,CAAwB,WAAxB;AACD,KA1BkB;;AAEf,SAAKP,KAAL,GAAa;AACXH,MAAAA,MAAM,EAAC,IADI;AAEXJ,MAAAA,MAAM,EAAE,EAFG;AAGXU,MAAAA,IAAI,EAAC;AAHM,KAAb;AAKH;;AAqBDK,EAAAA,MAAM,GAAG;AACL,WACE;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACY;AAAO,MAAA,EAAE,EAAC,UAAV;AAAqB,MAAA,QAAQ,EAAIjB,CAAD,IAAK,KAAKD,SAAL,CAAeC,CAAf,CAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADZ,EAEC;AAAQ,MAAA,OAAO,EAAE,MAAI,KAAKK,SAAL,EAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFD,EAGC;AAAQ,MAAA,EAAE,EAAC,YAAX;AAAwB,MAAA,OAAO,EAAE,MAAI,KAAKS,QAAL,EAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAHD,EAIC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAJF,EAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eALF,EAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBANF,EAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAPF,CADF,EAUE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC,KAAKL,KAAL,CAAWG,IAAX,CAAgBM,GAAhB,CAAqBN,IAAD,IAAQ;AAC3B,aiCH;;AA/DuC","sourcesContent":["import React, { Component } from 'react'\n// import Chart from 'react-apexcharts'\nimport axios from 'axios'\nimport swal from 'sweetalert'\nimport Loader from 'react-loader'\n\nexport default class body extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n          loaded:true,\n          search: \"\",\n          data:[]\n        }\n    }\n\n    handleval = (e) => {\n      this.setState({search:e.target.value})\n    }\n\n    fetchdata = () =>{\n      this.setState({loaded : false})\n      axios.post(\"http://localhost:5000/fetch\",{id : this.state.search})\n      .then((response)=>{\n        this.setState({loaded : true , data: response.data.data})\n        swal(\"Successfully fetched\",{\n          icon: \"success\"\n        })\n      })\n    }\n\n    redirect = () =>{\n      this.props.history.push(\"/searches\");\n    }\n\n    render() {\n        return (\n          <div className=\"padding\">\n           Search id: <input id=\"inputbox\" onChange={((e)=>this.handleval(e))}></input>\n           <button onClick={()=>this.fetchdata()}>Fetch data</button>\n           <button id=\"searchpage\" onClick={()=>this.redirect()}>Search Page</button>\n           <table>\n             <tr>\n               <th>date</th>\n               <th>open</th>\n               <th>high</th>\n               <th>low</th>\n               <th>close</th>\n               <th>volume</th>\n               <th>value</th>\n             </tr>\n             <Loader>\n             {this.state.data.map((data)=>{\n               return(\n                 <tr>\n                <td>{data.date}</td>\n                <td>{data.open}</td>\n                <td>{data.high}</td>\n                <td>{data.low}</td>\n                <td>{data.close}</td>\n                <td>{data.volume}</td>\n                <td>{data.value}</td>\n                 </tr> \n               )\n             })}\n             </Loader>\n           </table>\n          </div>\n        )\n    }\n}\n"]},"metadata":{},"sourceType":"module"}