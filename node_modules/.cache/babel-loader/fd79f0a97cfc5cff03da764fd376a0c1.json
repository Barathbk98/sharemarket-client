{"ast":null,"code":"var _jsxFileName = \"/home/barath/Documents/apexchart/src/components/body.jsx\";\nimport React, { Component } from 'react';\nimport Chart from 'react-apexcharts';\nimport axios from 'axios';\nexport default class body extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loaded: false,\n      loading: [10],\n      loadingoptions: {\n        chart: {\n          height: 350,\n          type: 'radialBar',\n          offsetY: -10\n        },\n        plotOptions: {\n          radialBar: {\n            startAngle: -135,\n            endAngle: 135,\n            dataLabels: {\n              name: {\n                fontSize: '16px',\n                color: undefined,\n                offsetY: 120\n              },\n              value: {\n                offsetY: 76,\n                fontSize: '22px',\n                color: undefined,\n                formatter: function (val) {\n                  return val + \"%\";\n                }\n              }\n            }\n          }\n        },\n        stroke: {\n          dashArray: 4\n        },\n        labels: ['Loading']\n      },\n      series: [{\n        data: []\n      }],\n      options: {\n        chart: {\n          type: 'candlestick',\n          height: 700\n        },\n        title: {\n          text: 'Indian Oil CandleStick Chart',\n          align: 'left'\n        },\n        xaxis: {\n          type: 'datetime'\n        },\n        yaxis: {\n          tooltip: {\n            enabled: true\n          }\n        }\n      },\n      lineseries: [{\n        name: \"Price\",\n        data: []\n      }],\n      lineoption: {\n        tooltip: {\n          enabled: true,\n          y: {\n            title: {\n              formatter: Price => Price\n            }\n          }\n        },\n        title: {\n          text: ' Indian Oil Line Chart',\n          align: 'left'\n        },\n        xaxis: {\n          type: 'datetime'\n        },\n        stroke: {\n          width: 3,\n          curve: 'smooth'\n        }\n      }\n    };\n  }\n\n  componentDidMount() {\n    console.log(this.state);\n    axios.get(\"https://www.moneycontrol.com/mc/widget/basicchart/get_chart_value?classic=true&sc_did=IOC&dur=1yr\").then(result => {\n      let val = result; // console.log(result.data.g1.length)\n      // console.log(new Date(result.data.g1[0].date))\n\n      var series = [];\n      var lineseries = []; // this.setState({lineoption:{xaxis:{min:result.data.g1[0].date}}})\n\n      result.data.g1.map((result, index) => {\n        let percent = index / val.data.g1.length * 100;\n        console.log(result);\n        series.push([result.date, [result.open, result.high, result.low, result.close]]);\n        lineseries.push([result.date, result.value]);\n        this.setState({\n          series: [{\n            data: series\n          }],\n          lineseries: [{\n            data: lineseries\n          }]\n        });\n\n        if (val.data.g1.length === index) {\n          this.setState({\n            loaded: true\n          });\n        } else {\n          this.setState({\n            loading: [percent]\n          });\n        } // this.setState({lineseries:[{data:[...this.state.lineseries[0].data,[result.date,result.value]]}]})\n        // this.setState({series:[{data:[...this.state.series[0].data,[result.date,[result.open,result.high,result.low,result.close]]]}]})\n\n      });\n      console.log(this.state);\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"padding\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, React.createElement(Chart, {\n      options: this.state.loadingoptions,\n      series: this.state.loading,\n      type: \"radialBar\",\n      width: 200,\n      height: 200,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }), React.createElement(Chart, {\n      options: this.state.options,\n      series: this.state.series,\n      type: \"candlestick\",\n      width: 1000,\n      height: 300,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }), React.createElement(Chart, {\n      options: this.state.lineoption,\n      series: this.state.lineseries,\n      type: \"line\",\n      width: 1000,\n      height: 300,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }));\n  }\n\n}","map":{"version":3,"sources":["/home/barath/Documents/apexchart/src/components/body.jsx"],"names":["React","Component","Chart","axios","body","constructor","props","state","loaded","loading","loadingoptions","chart","height","type","offsetY","plotOptions","radialBar","startAngle","endAngle","dataLabels","name","fontSize","color","undefined","value","formatter","val","stroke","dashArray","labels","series","data","options","title","text","align","xaxis","yaxis","tooltip","enabled","lineseries","lineoption","y","Price","width","curve","componentDidMount","console","log","get","then","result","g1","map","index","percent","length","push","date","open","high","low","close","setState","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport Chart from 'react-apexcharts'\nimport axios from 'axios'\n\nexport default class body extends Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            loaded: false,\n            loading:[10],\n            loadingoptions:{\n              chart: {\n                height: 350,\n                type: 'radialBar',\n                offsetY: -10\n              },\n              plotOptions: {\n                radialBar: {\n                  startAngle: -135,\n                  endAngle: 135,\n                  dataLabels: {\n                    name: {\n                      fontSize: '16px',\n                      color: undefined,\n                      offsetY: 120\n                    },\n                    value: {\n                      offsetY: 76,\n                      fontSize: '22px',\n                      color: undefined,\n                      formatter: function (val) {\n                        return val + \"%\";\n                      }\n                    }\n                  }\n                }\n              },\n              stroke: {\n                dashArray: 4\n              },\n              labels: ['Loading']\n            },\n            series: [{ \n                data: []\n                }],\n            options: {\n                chart: {\n                  type: 'candlestick',\n                  height: 700\n                },\n                title: {\n                  text: 'Indian Oil CandleStick Chart',\n                  align: 'left'\n                },\n                xaxis: {\n                  type: 'datetime'\n                },\n                yaxis: {\n                  tooltip: {\n                    enabled: true\n                  }\n                }\n              },\n              lineseries:[{\n                name: \"Price\",\n                data:[]\n              }],\n              lineoption:{\n                tooltip: {\n                  enabled: true,\n                  y:{\n                    title: {\n                      formatter: (Price) => Price\n                    }\n                  }\n                },\n                title: {\n                  text: ' Indian Oil Line Chart',\n                  align: 'left'\n                },\n                xaxis: {\n                  type: 'datetime'\n                },\n                stroke: {\n                  width:3,\n                  curve: 'smooth',\n                }\n              }\n            }\n        }\n\n    componentDidMount(){\n      console.log(this.state);\n        axios.get(\"https://www.moneycontrol.com/mc/widget/basicchart/get_chart_value?classic=true&sc_did=IOC&dur=1yr\")\n        .then((result)=>{\n          let val=result;\n            // console.log(result.data.g1.length)\n            // console.log(new Date(result.data.g1[0].date))\n            var series=[];\n            var lineseries=[];\n            // this.setState({lineoption:{xaxis:{min:result.data.g1[0].date}}})\n            result.data.g1.map((result,index)=>{\n              let percent=(index/val.data.g1.length)*100\n              console.log(result)\n              series.push([result.date,[result.open,result.high,result.low,result.close]]);\n              lineseries.push([result.date,result.value])\n              this.setState({series: [{data:series}],lineseries: [{data:lineseries}]});\n              if(val.data.g1.length===index){\n                this.setState({loaded : true})\n              }\n              else{\n                this.setState({loading:[percent]})\n              }\n              // this.setState({lineseries:[{data:[...this.state.lineseries[0].data,[result.date,result.value]]}]})\n              // this.setState({series:[{data:[...this.state.series[0].data,[result.date,[result.open,result.high,result.low,result.close]]]}]})\n            })\n            console.log(this.state);\n        })\n    }\n\n    render() {\n        return (\n          <div className=\"padding\">\n            <Chart options={this.state.loadingoptions} series={this.state.loading} type=\"radialBar\" width={200} height={200}/>\n            <Chart options={this.state.options} series={this.state.series} type=\"candlestick\" width={1000} height={300} />\n            <Chart options={this.state.lineoption} series={this.state.lineseries} type=\"line\" width={1000} height={300} />\n          </div>\n        )\n    }\n}\n"]},"metadata":{},"sourceType":"module"}