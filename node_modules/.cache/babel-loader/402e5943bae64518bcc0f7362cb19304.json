{"ast":null,"code":"var _jsxFileName = \"/home/barath/Documents/apexchart/client/src/components/logs.jsx\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport { TextField, Button } from '@material-ui/core';\nimport { ToggleButton, ToggleButtonGroup } from '@material-ui/lab';\nimport Chart from 'react-apexcharts';\nimport moment from 'moment';\nexport default class logs extends Component {\n  constructor(props) {\n    super(props);\n\n    this.componentDidMount = () => {\n      this.tablefetch();\n      axios.get(`api/statuscount`).then(response => {\n        let series1;\n        console.log(response.data.data);\n        response.data.data.code_count.buckets.map(data => {\n          this.state.option1.labels.push(data.key);\n          this.state.series1.push(data.doc_count);\n        });\n        response.data.data.agent_count.buckets.map(data => {\n          this.state.option2.labels.push(data.key);\n          this.state.series2.push(data.doc_count);\n        });\n        this.setState({\n          option1: this.state.option1,\n          series1: this.state.series1,\n          option2: this.state.option2,\n          series2: this.state.series2\n        });\n      });\n      axios.get(`api/datehits?type=${this.state.type}`).then(response => {\n        let x;\n        console.log(response.data);\n        let value = [];\n        response.data.data.map(data => {\n          x = moment(data.key_as_string).format(\"HH:mma\");\n          this.setState({\n            option3: {\n              label: [response.data.start, response.data.start]\n            }\n          });\n          value.push({\n            x,\n            y: data.doc_count\n          });\n        });\n        this.setState({\n          series3: [{\n            data: value\n          }]\n        });\n      }).catch(err => {\n        alert(\"something went wrong\");\n      });\n    };\n\n    this.redirect = () => {\n      this.props.history.push(\"../\");\n    };\n\n    this.tablefetch = () => {\n      axios.get(`api/logs?limit=${this.state.limit}&page=${this.state.page}`).then(response => {\n        this.setState({\n          data: response.data.data,\n          page: this.state.page + 1\n        });\n      });\n    };\n\n    this.setlimit = async () => {\n      await this.setState({\n        page: 0\n      });\n      await axios.get(`api/logs?limit=${this.state.limit}&page=${this.state.page}`).then(response => {\n        this.setState({\n          data: response.data.data\n        });\n      });\n    };\n\n    this.limit = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.search = () => {\n      axios.get(`api/logsearch?search=${this.state.search}&limit=${this.state.limit}`).then(response => {\n        this.setState({\n          data: response.data.data\n        });\n        console.log(response.data);\n      });\n    };\n\n    this.handletype = async (e, type) => {\n      if (type != null) {\n        await this.setState({\n          type\n        });\n        await axios.get(`api/datehits?type=${this.state.type}`).then(response => {\n          console.log(response.data);\n          let value = [];\n          let x;\n          response.data.data.map(data => {\n            if (this.state.type === \"day\") {\n              x = moment(data.key_as_string).format(\"HH:mma\");\n            } else {\n              x = moment(data.key_as_string).format(\"DD MMM\");\n            }\n\n            value.push({\n              x,\n              y: data.doc_count\n            });\n          });\n          this.setState({\n            series3: [{\n              data: value\n            }]\n          });\n        }).catch(err => {\n          alert(\"something went wrong\");\n        });\n      }\n    };\n\n    this.state = {\n      data: [],\n      search: \"\",\n      limit: 20,\n      page: 0,\n      option1: {\n        title: {\n          text: \"Status Chart\",\n          align: \"centre\"\n        },\n        labels: []\n      },\n      series1: [],\n      option2: {\n        title: {\n          text: \"Agent Chart  \",\n          align: \"centre\"\n        },\n        labels: []\n      },\n      series2: [],\n      type: \"day\",\n      option3: {\n        title: {\n          text: \"Hits chart\",\n          align: \"centre\"\n        },\n        xaxis: {\n          type: \"date\",\n          min: moment(),\n          labels: {\n            datetimeFormatter: {\n              year: 'yyyy',\n              month: 'MMM \\'yy',\n              day: 'dd MMM',\n              hour: 'HH:mm'\n            }\n          }\n        }\n      },\n      series3: [{\n        data: []\n      }]\n    };\n  }\n\n  render() {\n    console.log(this.state.series3);\n    return React.createElement(\"div\", {\n      className: \"logs\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      placeholder: \"Search\",\n      name: \"search\",\n      onChange: e => this.limit(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }), React.createElement(Button, {\n      variant: \"contained\",\n      onClick: () => this.search(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }, \"Search\"), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }, \"LIMIT :\"), React.createElement(TextField, {\n      type: \"Number\",\n      name: \"limit\",\n      onChange: e => this.limit(e),\n      value: this.state.limit,\n      inputProps: {\n        min: \"10\",\n        max: \"100\",\n        step: \"10\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }), React.createElement(Button, {\n      variant: \"contained\",\n      onClick: () => this.setlimit(),\n      color: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }, \"SET\"), React.createElement(\"button\", {\n      id: \"searchpage\",\n      onClick: () => this.redirect(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }, \"Main Page\"), React.createElement(\"div\", {\n      id: \"logtable\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }, React.createElement(\"table\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      id: \"colorhead\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }, \"CLEINT\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }, \"METHOD\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }, \"STATUS\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }, \"AGENT\")), this.state.data.map(data => {\n      return React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170\n        },\n        __self: this\n      }, data._source.client), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171\n        },\n        __self: this\n      }, data._source.method), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172\n        },\n        __self: this\n      }, data._source.code), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173\n        },\n        __self: this\n      }, data._source.agent));\n    }))), React.createElement(\"div\", {\n      id: \"piecharts\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178\n      },\n      __self: this\n    }, React.createElement(Chart, {\n      className: \"pie\",\n      options: this.state.option1,\n      series: this.state.series1,\n      type: \"pie\",\n      height: 370,\n      width: 350,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    }), React.createElement(Chart, {\n      className: \"pie2\",\n      options: this.state.option2,\n      series: this.state.series2,\n      type: \"pie\",\n      height: 370,\n      width: 350,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    })), React.createElement(ToggleButtonGroup, {\n      exclusive: true,\n      onChange: this.handletype,\n      value: this.state.type,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182\n      },\n      __self: this\n    }, React.createElement(ToggleButton, {\n      value: \"day\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187\n      },\n      __self: this\n    }, \"Day\"), React.createElement(ToggleButton, {\n      value: \"month\",\n      color: this.state.month,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188\n      },\n      __self: this\n    }, \"Month\")), React.createElement(Chart, {\n      className: \"linechart\",\n      options: this.state.option3,\n      series: this.state.series3,\n      type: \"line\",\n      height: 350,\n      width: 1000,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191\n      },\n      __self: this\n    }));\n  }\n\n}","map":{"version":3,"sources":["/home/barath/Documents/apexchart/client/src/components/logs.jsx"],"names":["React","Component","axios","TextField","Button","ToggleButton","ToggleButtonGroup","Chart","moment","logs","constructor","props","componentDidMount","tablefetch","get","then","response","series1","console","log","data","code_count","buckets","map","state","option1","labels","push","key","doc_count","agent_count","option2","series2","setState","type","x","value","key_as_string","format","option3","label","start","y","series3","catch","err","alert","redirect","history","limit","page","setlimit","e","target","name","search","handletype","title","text","align","xaxis","min","datetimeFormatter","year","month","day","hour","render","max","step","_source","client","method","code","agent"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport axios from 'axios';\nimport {TextField,Button} from '@material-ui/core'\nimport {ToggleButton,ToggleButtonGroup} from '@material-ui/lab'\nimport Chart from 'react-apexcharts'\nimport moment from 'moment'\n\nexport default class logs extends Component {\n\n    constructor(props){\n        super(props);\n        this.state = {\n            data : [],\n            search: \"\",\n            limit: 20,\n            page:0,\n            option1:{\n                title:{\n                    text: \"Status Chart\",\n                    align : \"centre\"\n                },\n                labels: [],\n            },\n            series1:[],\n            option2:{\n                title:{\n                    text: \"Agent Chart  \",\n                    align : \"centre\"\n                },\n                labels: [],\n            },\n            series2:[],\n            type:\"day\",\n            option3: {\n                title: {\n                    text: \"Hits chart\",\n                    align : \"centre\"\n                },\n                xaxis: {\n                    type: \"date\",\n                    min: moment(),\n                    labels : {\n                        datetimeFormatter: {\n                            year: 'yyyy',\n                            month: 'MMM \\'yy',\n                            day: 'dd MMM',\n                            hour: 'HH:mm'\n                          }\n                    }\n                },\n            },\n            series3:[{\n                data: []\n            }]\n        }\n    }\n\n    componentDidMount = () => {\n        this.tablefetch();\n        axios.get(`api/statuscount`)\n        .then((response)=>{\n            let series1 \n            console.log(response.data.data)\n            response.data.data.code_count.buckets.map((data)=>{\n                this.state.option1.labels.push(data.key)\n                this.state.series1.push(data.doc_count)\n            })\n            response.data.data.agent_count.buckets.map((data)=>{\n                this.state.option2.labels.push(data.key)\n                this.state.series2.push(data.doc_count)\n            })\n            this.setState({\n                option1 : this.state.option1,\n                series1: this.state.series1,\n                option2 : this.state.option2,\n                series2: this.state.series2,\n            })\n        })\n\n        axios.get(`api/datehits?type=${this.state.type}`)\n        .then((response)=>{\n            let x;\n            console.log(response.data);\n            let value=[]\n            response.data.data.map((data)=>{\n                x= moment(data.key_as_string).format(\"HH:mma\")\n                this.setState({option3 : {label : [response.data.start,response.data.start]}})\n                value.push({x,y : data.doc_count})\n            })\n            this.setState({series3 : [{data: value}]})\n        }).catch((err)=>{\n            alert(\"something went wrong\")\n        })\n    }\n\n    redirect = () =>{\n        this.props.history.push(\"../\")\n    }\n\n    tablefetch = () => {\n        axios.get(`api/logs?limit=${this.state.limit}&page=${this.state.page}`)\n        .then((response)=>{\n            this.setState({data : response.data.data, page : this.state.page+1})\n        })\n    } \n\n    setlimit = async() =>{\n        await this.setState({page : 0})\n        await axios.get(`api/logs?limit=${this.state.limit}&page=${this.state.page}`)\n        .then((response)=>{\n            this.setState({data : response.data.data})\n        })\n    }\n\n    limit = (e) => { \n            this.setState({[e.target.name]:e.target.value})\n    }\n\n    search = () =>{\n        axios.get(`api/logsearch?search=${this.state.search}&limit=${this.state.limit}`)\n        .then((response)=>{\n            this.setState({data : response.data.data})\n            console.log(response.data);\n        })\n    }\n\n    handletype = async(e,type) =>{\n        if(type!=null){\n            await this.setState({type})\n            await axios.get(`api/datehits?type=${this.state.type}`)\n            .then((response)=>{\n                console.log(response.data);\n                let value=[]\n                let x;\n                response.data.data.map((data)=>{\n                    if(this.state.type===\"day\"){\n                        x= moment(data.key_as_string).format(\"HH:mma\")\n                    } else {\n                        x= moment(data.key_as_string).format(\"DD MMM\")\n                    }\n                    value.push({x,y : data.doc_count})\n                })\n                this.setState({series3 : [{data: value}]})\n            }).catch((err)=>{\n                alert(\"something went wrong\");\n            })\n        }\n    }\n\n    render() {\n        console.log(this.state.series3)\n        return (\n            <div className=\"logs\">\n                <TextField placeholder=\"Search\" name=\"search\" onChange={(e)=>this.limit(e)}></TextField>\n                <Button variant=\"contained\" onClick={()=>this.search()}>Search</Button>\n                <label>LIMIT :</label><TextField type=\"Number\" name=\"limit\" onChange={(e)=>this.limit(e)} value={this.state.limit} inputProps={{ min:\"10\",max:\"100\" ,step:\"10\"}}/>\n                <Button variant=\"contained\" onClick={()=>this.setlimit()} color=\"primary\">SET</Button>\n                <button id=\"searchpage\" onClick={()=>this.redirect()}>Main Page</button>\n                <div id=\"logtable\">\n                    <table>\n                        <tr id=\"colorhead\">\n                            <th>CLEINT</th>\n                            <th>METHOD</th>\n                            <th>STATUS</th>\n                            <th>AGENT</th>\n                        </tr>\n                        {this.state.data.map((data)=>{\n                            return(\n                            <tr>\n                                <td>{data._source.client}</td>\n                                <td>{data._source.method}</td>\n                                <td>{data._source.code}</td>\n                                <td>{data._source.agent}</td>\n                            </tr>)\n                        })}\n                    </table>\n                </div>\n                <div id=\"piecharts\">\n                <Chart className=\"pie\" options={this.state.option1} series={this.state.series1} type=\"pie\" height={370} width={350}/>\n                <Chart className=\"pie2\" options={this.state.option2} series={this.state.series2} type=\"pie\" height={370} width={350}/>\n                </div>\n                <ToggleButtonGroup \n                    exclusive \n                    onChange={this.handletype} \n                    value={this.state.type} \n                    >\n                    <ToggleButton value=\"day\">Day</ToggleButton>\n                    <ToggleButton value=\"month\" color={this.state.month}>Month</ToggleButton>\n                    {/* <ToggleButton value=\"year\" color={this.state.year}>Year</ToggleButton> */}\n                </ToggleButtonGroup>\n                <Chart className=\"linechart\" options={this.state.option3} series={this.state.series3} type=\"line\" height={350} width={1000}/>\n            </div>\n        )\n    }\n}\n"]},"metadata":{},"sourceType":"module"}