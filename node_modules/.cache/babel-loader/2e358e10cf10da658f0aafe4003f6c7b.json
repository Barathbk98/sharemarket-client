{"ast":null,"code":"var _jsxFileName = \"/home/barath/Documents/apexchart/src/components/body.jsx\";\nimport React, { Component } from 'react';\nimport Chart from 'react-apexcharts';\nimport axios from 'axios';\nexport default class body extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      bubbleseries: [{\n        name: \"Indian Oil\",\n        data: []\n      }],\n      bubbleoptions: {\n        chart: {\n          height: 350,\n          type: 'scatter'\n        },\n        title: {\n          text: 'Indian Oil scatter chart'\n        },\n        xaxis: {\n          type: 'datetime'\n        }\n      },\n      series: [{\n        data: []\n      }],\n      options: {\n        chart: {\n          type: 'candlestick',\n          height: 700\n        },\n        title: {\n          text: 'Indian Oil CandleStick Chart',\n          align: 'left'\n        },\n        xaxis: {\n          type: 'datetime'\n        },\n        yaxis: {\n          tooltip: {\n            enabled: true\n          }\n        }\n      },\n      lineseries: [{\n        name: \"Price\",\n        data: []\n      }],\n      lineoption: {\n        chart: {\n          type: \"area\",\n          sparkline: {\n            enabled: true\n          }\n        },\n        tooltip: {\n          enabled: true,\n          y: {\n            title: {\n              formatter: Price => Price\n            }\n          }\n        },\n        title: {\n          text: ' Indian Oil Line Chart',\n          align: 'left'\n        },\n        xaxis: {\n          type: 'datetime'\n        },\n        stroke: {\n          width: 3,\n          curve: 'smooth'\n        }\n      }\n    };\n  }\n\n  componentDidMount() {\n    console.log(this.state);\n    axios.get(\"https://www.moneycontrol.com/mc/widget/basicchart/get_chart_value?classic=true&sc_did=IOC&dur=1yr\").then(result => {\n      // console.log(result.data.g1.length)\n      // console.log(new Date(result.data.g1[0].date))\n      var series = [];\n      var lineseries = [];\n      var bubleseries = []; // this.setState({lineoption:{xaxis:{min:result.data.g1[0].date}}})\n\n      result.data.g1.map((result, index) => {\n        console.log(result);\n        series.push([result.date, [result.open, result.high, result.low, result.close]]);\n        lineseries.push([result.date, result.value]);\n        bubleseries.push(result.date, result.value);\n        this.setState({\n          series: [{\n            data: series\n          }],\n          lineseries: [{\n            data: lineseries\n          }],\n          bubbleseries: [{\n            data: lineseries\n          }]\n        }); // this.setState({lineseries:[{data:[...this.state.lineseries[0].data,[result.date,result.value]]}]})\n        // this.setState({series:[{data:[...this.state.series[0].data,[result.date,[result.open,result.high,result.low,result.close]]]}]})\n      });\n      console.log(this.state);\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"padding\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, React.createElement(Chart, {\n      options: this.state.bubbleoptions,\n      series: this.state.bubbleseries,\n      type: \"scatter\",\n      width: 1000,\n      height: 300,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }), React.createElement(Chart, {\n      options: this.state.options,\n      series: this.state.series,\n      type: \"candlestick\",\n      width: 1000,\n      height: 300,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }), React.createElement(Chart, {\n      options: this.state.lineoption,\n      series: this.state.lineseries,\n      type: \"area\",\n      width: 1000,\n      height: 300,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }));\n  }\n\n}","map":{"version":3,"sources":["/home/barath/Documents/apexchart/src/components/body.jsx"],"names":["React","Component","Chart","axios","body","constructor","props","state","bubbleseries","name","data","bubbleoptions","chart","height","type","title","text","xaxis","series","options","align","yaxis","tooltip","enabled","lineseries","lineoption","sparkline","y","formatter","Price","stroke","width","curve","componentDidMount","console","log","get","then","result","bubleseries","g1","map","index","push","date","open","high","low","close","value","setState","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport Chart from 'react-apexcharts'\nimport axios from 'axios'\n\nexport default class body extends Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            bubbleseries:[{\n              name: \"Indian Oil\",\n              data: []\n            }],\n            bubbleoptions:{\n              chart: {\n                height: 350,\n                type: 'scatter',\n              },\n              title: {\n                text: 'Indian Oil scatter chart'\n              },\n              xaxis: {\n                type: 'datetime',\n            }\n          },\n            series: [{ \n                data: []\n                }],\n            options: {\n                chart: {\n                  type: 'candlestick',\n                  height: 700\n                },\n                title: {\n                  text: 'Indian Oil CandleStick Chart',\n                  align: 'left'\n                },\n                xaxis: {\n                  type: 'datetime'\n                },\n                yaxis: {\n                  tooltip: {\n                    enabled: true\n                  }\n                }\n              },\n              lineseries:[{\n                name: \"Price\",\n                data:[]\n              }],\n              lineoption:{\n                chart: {\n                  type: \"area\",\n                  sparkline: {\n                    enabled : true\n                  }\n                },\n                tooltip: {\n                  enabled: true,\n                  y:{\n                    title: {\n                      formatter: (Price) => Price\n                    }\n                  }\n                },\n                title: {\n                  text: ' Indian Oil Line Chart',\n                  align: 'left'\n                },\n                xaxis: {\n                  type: 'datetime'\n                },\n                stroke: {\n                  width:3,\n                  curve: 'smooth',\n                }\n              }\n            }\n        }\n\n    componentDidMount(){\n      console.log(this.state);\n        axios.get(\"https://www.moneycontrol.com/mc/widget/basicchart/get_chart_value?classic=true&sc_did=IOC&dur=1yr\")\n        .then((result)=>{\n            // console.log(result.data.g1.length)\n            // console.log(new Date(result.data.g1[0].date))\n            var series=[];\n            var lineseries=[];\n            var bubleseries=[];\n            // this.setState({lineoption:{xaxis:{min:result.data.g1[0].date}}})\n            result.data.g1.map((result,index)=>{\n              console.log(result)\n              series.push([result.date,[result.open,result.high,result.low,result.close]]);\n              lineseries.push([result.date,result.value])\n              bubleseries.push(result.date,result.value)\n              this.setState({series: [{data:series}],lineseries: [{data:lineseries}], bubbleseries:[{data:lineseries}]});\n              // this.setState({lineseries:[{data:[...this.state.lineseries[0].data,[result.date,result.value]]}]})\n              // this.setState({series:[{data:[...this.state.series[0].data,[result.date,[result.open,result.high,result.low,result.close]]]}]})\n            })\n            console.log(this.state);\n        })\n    }\n\n    render() {\n        return (\n          <div className=\"padding\">\n            <Chart options={this.state.bubbleoptions} series={this.state.bubbleseries} type=\"scatter\" width={1000} height={300}/>\n            <Chart options={this.state.options} series={this.state.series} type=\"candlestick\" width={1000} height={300} />\n            <Chart options={this.state.lineoption} series={this.state.lineseries} type=\"area\" width={1000} height={300} />\n          </div>\n        )\n    }\n}\n"]},"metadata":{},"sourceType":"module"}